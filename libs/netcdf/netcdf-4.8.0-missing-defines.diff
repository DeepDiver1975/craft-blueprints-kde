diff -ruNa netcdf-c-4.8.0.orig/include/nclog.h netcdf-c-4.8.0/include/nclog.h
--- netcdf-c-4.8.0.orig/include/nclog.h	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/include/nclog.h	2021-05-05 21:12:43.015642625 +0200
@@ -8,6 +8,7 @@
 #define NCLOG_H
 
 #include <stdarg.h>
+#include <stdio.h>
 #include "ncexternl.h"
 
 #define NCENVLOGGING "NCLOGGING"
diff -ruNa netcdf-c-4.8.0.orig/libdispatch/dcrc64.c netcdf-c-4.8.0/libdispatch/dcrc64.c
--- netcdf-c-4.8.0.orig/libdispatch/dcrc64.c	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/libdispatch/dcrc64.c	2021-05-06 10:39:26.559599521 +0200
@@ -44,6 +44,11 @@
 
 #include "ncexternl.h"
 
+#ifndef uint64
+#include <stdint.h>
+typedef uint64_t uint64;
+#endif
+
 /* The include of pthread.h below can be commented out in order to not use the
    pthread library for table initialization.  In that case, the initialization
    will not be thread-safe.  That's fine, so long as it can be assured that
diff -ruNa netcdf-c-4.8.0.orig/libsrc/ncx.h netcdf-c-4.8.0/libsrc/ncx.h
--- netcdf-c-4.8.0.orig/libsrc/ncx.h	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/libsrc/ncx.h	2021-05-06 20:03:07.984680723 +0200
@@ -171,6 +171,22 @@
 typedef signed char schar;
 #endif
 
+#ifndef uchar
+typedef unsigned char uchar;
+#endif
+#ifndef ushort
+typedef unsigned short ushort;
+#endif
+#ifndef uint
+typedef unsigned int uint;
+#endif
+#ifndef longlong
+typedef long long longlong;
+#endif
+#ifndef ulonglong
+typedef unsigned long long ulonglong;
+#endif
+
 /*
  * Primitive numeric conversion functions.
  * The `put' functions convert from native internal
diff -ruNa netcdf-c-4.8.0.orig/libsrc/ncx.m4 netcdf-c-4.8.0/libsrc/ncx.m4
--- netcdf-c-4.8.0.orig/libsrc/ncx.m4	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/libsrc/ncx.m4	2021-05-15 20:26:27.584582493 +0200
@@ -179,7 +179,7 @@
 #ifdef  SIZEOF_UNSIGNED_CHAR
 #define SIZEOF_UCHAR SIZEOF_UNSIGNED_CHAR
 #else
-#error "unknown SIZEOF_UCHAR"
+#define SIZEOF_UCHAR 1
 #endif
 #endif
 
@@ -189,7 +189,7 @@
 #elif defined(SIZEOF_UNSIGNED_SHORT)
 #define SIZEOF_USHORT SIZEOF_UNSIGNED_SHORT
 #else
-#error "unknown SIZEOF_USHORT"
+#define SIZEOF_USHORT 2
 #endif
 #endif
 
@@ -197,7 +197,7 @@
 #ifdef  SIZEOF_UNSIGNED_INT
 #define SIZEOF_UINT SIZEOF_UNSIGNED_INT
 #else
-#error "unknown SIZEOF_UINT"
+#define SIZEOF_UINT 4
 #endif
 #endif
 
@@ -223,7 +223,7 @@
 #ifdef  SIZEOF_UNSIGNED_LONG_LONG
 #define SIZEOF_ULONGLONG SIZEOF_UNSIGNED_LONG_LONG
 #else
-#error "unknown SIZEOF_ULONGLONG"
+#define SIZEOF_ULONGLONG SIZEOF_INT64
 #endif
 #endif
 
@@ -233,7 +233,7 @@
 #elif defined(SIZEOF_ULONGLONG)
 #define SIZEOF_UINT64 SIZEOF_ULONGLONG
 #else
-#error "unknown SIZEOF_UINT64"
+#define SIZEOF_UINT64 SIZEOF_INT64
 #endif
 #endif
 
diff -ruNa netcdf-c-4.8.0.orig/libsrc/putget.c netcdf-c-4.8.0/libsrc/putget.c
--- netcdf-c-4.8.0.orig/libsrc/putget.c	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/libsrc/putget.c	2021-05-13 13:44:25.728611481 +0200
@@ -193,6 +193,9 @@
 }
 #line 112
 
+#ifndef SIZEOF_INT
+#define SIZEOF_INT 4
+#endif
 
 #if (SIZEOF_INT >= X_SIZEOF_INT)
 static int
diff -ruNa netcdf-c-4.8.0.orig/libsrc/putget.m4 netcdf-c-4.8.0/libsrc/putget.m4
--- netcdf-c-4.8.0.orig/libsrc/putget.m4	2021-03-30 22:23:10.000000000 +0200
+++ netcdf-c-4.8.0/libsrc/putget.m4	2021-05-13 13:46:13.008089615 +0200
@@ -111,6 +111,10 @@
 NCFILL(char, char, X_SIZEOF_CHAR, NC_FILL_CHAR)
 NCFILL(short, short, X_SIZEOF_SHORT, NC_FILL_SHORT)
 
+#ifndef SIZEOF_INT
+#define SIZEOF_INT 4
+#endif
+
 #if (SIZEOF_INT >= X_SIZEOF_INT)
 NCFILL(int, int, X_SIZEOF_INT, NC_FILL_INT)
 #elif SIZEOF_LONG == X_SIZEOF_INT
