From 91bf0a591435d889f2d06ac5dd16479f3d02f959 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dawid=20Wro=CC=81bel?= <me@dawidwrobel.com>
Date: Tue, 19 Oct 2021 13:51:46 +0200
Subject: [PATCH 1/5] Make Windows macros more generic to include MSVC

__WIN32__ macros are not defined by MSVC. Use the more broad
_WIN32 macro instead.

See:
https://web.archive.org/web/20140625123925/http://nadeausoftware.com/articles/2012/01/c_c_tip_how_use_compiler_predefined_macros_detect_operating_system
---
 lib/ofx_preproc.cpp   | 10 +++++-----
 lib/ofx_utilities.cpp |  4 ++--
 lib/win32.cpp         |  2 +-
 lib/win32.hh          |  2 +-
 4 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/lib/ofx_preproc.cpp b/lib/ofx_preproc.cpp
index 75ce5f9..12ae478 100644
--- a/lib/ofx_preproc.cpp
+++ b/lib/ofx_preproc.cpp
@@ -35,13 +35,13 @@
 #include <iconv.h>
 #endif
 
-#ifdef __WIN32__
+#ifdef _WIN32
 # define DIRSEP "\\"
 #else
 # define DIRSEP "/"
 #endif
 
-#ifdef __WIN32__
+#ifdef _WIN32
 # include "win32.hh"
 # include <windows.h> // for GetModuleFileName()
 # undef ERROR
@@ -107,7 +107,7 @@ int ofx_proc_file(LibofxContextPtr ctx, const char * p_filename)
     mkTempFileName("libofxtmpXXXXXX", tmp_filename, sizeof(tmp_filename));
 
     message_out(DEBUG, "ofx_proc_file(): Creating temp file: " + std::string(tmp_filename));
-#ifdef __WIN32__
+#ifdef _WIN32
     tmp_file_fd = mkstemp_win32(tmp_filename);
 #else
     tmp_file_fd = mkstemp(tmp_filename);
@@ -510,7 +510,7 @@ std::string sanitize_proprietary_tags(std::string input_string)
 }
 
 
-#ifdef __WIN32__
+#ifdef _WIN32
 static std::string get_dtd_installation_directory()
 {
   // Partial implementation of
@@ -565,7 +565,7 @@ std::string find_dtd(LibofxContextPtr ctx, const std::string& dtd_filename)
     }
   }
 
-#ifdef __WIN32__
+#ifdef _WIN32
   dtd_path_filename = get_dtd_installation_directory();
   if (!dtd_path_filename.empty())
   {
diff --git a/lib/ofx_utilities.cpp b/lib/ofx_utilities.cpp
index f76a218..e33f533 100644
--- a/lib/ofx_utilities.cpp
+++ b/lib/ofx_utilities.cpp
@@ -28,7 +28,7 @@
 #include "messages.hh"
 #include "ofx_utilities.hh"
 
-#ifdef __WIN32__
+#ifdef _WIN32
 # define DIRSEP "\\"
 /* MSWin calls it _mkgmtime instead of timegm */
 # define timegm(tm) _mkgmtime(tm)
@@ -234,7 +234,7 @@ std::string get_tmp_dir()
   if (var) return var;
   var = getenv("TEMP");
   if (var) return var;
-#ifdef __WIN32__
+#ifdef _WIN32
   return "C:\\";
 #else
   return "/tmp";
diff --git a/lib/win32.cpp b/lib/win32.cpp
index 5f863de..b4b8594 100644
--- a/lib/win32.cpp
+++ b/lib/win32.cpp
@@ -25,7 +25,7 @@
 
 
 
-#ifdef __WIN32__
+#ifdef _WIN32
 
 int mkstemp_win32(char *tmpl)
 {
diff --git a/lib/win32.hh b/lib/win32.hh
index 8df3970..f41f673 100644
--- a/lib/win32.hh
+++ b/lib/win32.hh
@@ -21,7 +21,7 @@
 #endif
 
 
-#ifdef __WIN32__
+#ifdef _WIN32
 
 int mkstemp_win32(char *tmpl);
 

From 6045086e9a5c525213bd83afcf5c8aae53db2f1d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dawid=20Wro=CC=81bel?= <me@dawidwrobel.com>
Date: Tue, 19 Oct 2021 14:00:33 +0200
Subject: [PATCH 2/5] unistd.h is not available under MSVC

---
 lib/win32.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/lib/win32.cpp b/lib/win32.cpp
index b4b8594..3542fe6 100644
--- a/lib/win32.cpp
+++ b/lib/win32.cpp
@@ -18,7 +18,9 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
+#endif
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <assert.h>

From 9fab8454e7f5d0d2e5a418d91e8517b1a42a928e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dawid=20Wro=CC=81bel?= <me@dawidwrobel.com>
Date: Tue, 19 Oct 2021 14:02:18 +0200
Subject: [PATCH 3/5] Use strcasecmp, snprintf and open replacements under MSVC

---
 lib/win32.cpp | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/lib/win32.cpp b/lib/win32.cpp
index 3542fe6..7d53811 100644
--- a/lib/win32.cpp
+++ b/lib/win32.cpp
@@ -29,6 +29,14 @@
 
 #ifdef _WIN32
 
+#ifdef _MSC_VER
+#include <Windows.h>
+#include <io.h>
+#define strcasecmp strcmpi
+#define snprintf _snprintf
+#define open _open
+#endif
+
 int mkstemp_win32(char *tmpl)
 {
   int fd = -1;

From 3b36cfbc7b6fb571c989a8b4eb4ead9c41c5cc48 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dawid=20Wro=CC=81bel?= <me@dawidwrobel.com>
Date: Tue, 19 Oct 2021 14:03:24 +0200
Subject: [PATCH 4/5] Only link ofx2qif against C++ STD lib

This fixes compilation of the main library with
MSVC.
---
 lib/Makefile.am     | 4 ++--
 ofx2qif/Makefile.am | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/Makefile.am b/lib/Makefile.am
index bd9a8aa..f0eef60 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -45,8 +45,8 @@ AM_CPPFLAGS = \
 	-I${OPENSPINCLUDES} \
 	-DMAKEFILE_DTD_PATH=\"${LIBOFX_DTD_DIR}\"
 
-#libofx_la_LIBADD = @LIBOBJS@ ${OPENSPLIBS} -lstdc++
-libofx_la_LIBADD = $(OPENSPLIBS) $(ICONV_LIBS) -lstdc++
+#libofx_la_LIBADD = @LIBOBJS@ ${OPENSPLIBS}
+libofx_la_LIBADD = $(OPENSPLIBS) $(ICONV_LIBS)
 libofx_la_LDFLAGS = -no-undefined -version-info @LIBOFX_SO_CURRENT@:@LIBOFX_SO_REVISION@:@LIBOFX_SO_AGE@
 
 
diff --git a/ofx2qif/Makefile.am b/ofx2qif/Makefile.am
index 3d41a24..e3114ef 100644
--- a/ofx2qif/Makefile.am
+++ b/ofx2qif/Makefile.am
@@ -1,5 +1,5 @@
 bin_PROGRAMS = ofx2qif
-ofx2qif_LDADD = $(top_builddir)/lib/libofx.la
+ofx2qif_LDADD = $(top_builddir)/lib/libofx.la -lstdc++
 ofx2qif_SOURCES = ofx2qif.c
 AM_CPPFLAGS = \
 	-I${top_builddir}/inc

From 366c435acaa39e06533517ee61fba59acfece609 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dawid=20Wro=CC=81bel?= <me@dawidwrobel.com>
Date: Wed, 29 Jun 2022 13:10:52 +0200
Subject: [PATCH 5/5] Add ./configure option to disable CLI tools

---
 Makefile.am  | 11 ++++++++++-
 configure.ac | 30 ++++++++++++++++++++++++++----
 2 files changed, 36 insertions(+), 5 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index cb29712..941cb42 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,10 +1,19 @@
 ACLOCAL_AMFLAGS = -I m4
 
+if BUILD_OFX2QIF
+  MAYBE_OFX2QIF = ofx2qif
+endif
+
+if BUILD_OFXDUMP
+  MAYBE_OFXDUMP = ofxdump
+endif
+
 if BUILD_OFXCONNECT
   MAYBE_OFXCONNECT = ofxconnect
 endif
+
 DIST_SUBDIRS = m4 inc dtd lib doc . ofx2qif ofxdump ofxconnect
-SUBDIRS = m4 inc dtd lib doc . ofx2qif ofxdump $(MAYBE_OFXCONNECT)
+SUBDIRS = m4 inc dtd lib doc . $(MAYBE_OFX2QIF) $(MAYBE_OFXDUMP) $(MAYBE_OFXCONNECT)
 
 doc_DATA = \
   AUTHORS \
diff --git a/configure.ac b/configure.ac
index 9c6955a..0966bda 100644
--- a/configure.ac
+++ b/configure.ac
@@ -330,13 +330,35 @@ PKG_CHECK_MODULES(LIBXMLPP,libxml++-2.6 >= 2.6,
 #	[AC_DEFINE(HAVE_QT, 1, [Defined if Qt Gui is available])],
 #        [AC_MSG_WARN([Qt is not available. Some experimental direct connect samples will not be fully functional.])])
 
+# check if building tools
+# ----------------------------------------------------------------------------
+
+AC_ARG_ENABLE(tools,
+        AS_HELP_STRING(--disable-tools,[Disable building of CLI tools: ofx2qif, ofxdump, ofxconnect] (no)),
+[case "${enableval}" in
+  yes) tools=yes ;;
+  no)  tools=no ;;
+  *) AC_MSG_ERROR([bad value ${enableval} for --disable-tools]) ;;
+esac],[tools=yes])
+
+build_ofx2qif=no
+build_ofxdump=no
 build_ofxconnect=no
-if test "$libcurl_available" = yes; then
-	if test "$have_libxmlpp" = yes; then
-		build_ofxconnect=yes
+
+if test x$tools = xyes ; then
+	build_ofx2qif=yes
+	build_ofxdump=yes
+
+	if test "$libcurl_available" = yes; then
+		if test "$have_libxmlpp" = yes; then
+			build_ofxconnect=yes
+		fi
 	fi
 fi
-AM_CONDITIONAL([BUILD_OFXCONNECT], [test "$build_ofxconnect" = yes])
+
+AM_CONDITIONAL([BUILD_OFX2QIF], [test "x$build_ofx2qif" = xyes])
+AM_CONDITIONAL([BUILD_OFXDUMP], [test x"$build_ofxdump" = xyes])
+AM_CONDITIONAL([BUILD_OFXCONNECT], [test "x$build_ofxconnect" = xyes])
 
 # check for iconv
 # ----------------------------------------------------------------------------