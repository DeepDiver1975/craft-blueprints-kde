From 41830616a681655bc57fb7d3152b4b0af3a08313 Mon Sep 17 00:00:00 2001
From: Tobias Fella <fella@posteo.de>
Date: Sat, 26 Nov 2022 19:17:05 +0100
Subject: [PATCH] Revert "Build: Check if libatomic is required"

This reverts commit 312f2fca861b4c623481da58241a1139e013ef83.
---
 CMakeLists.txt              |  2 --
 cmake/AddQCoroLibrary.cmake |  4 ----
 cmake/CheckAtomic.cmake     | 40 -------------------------------------
 tests/CMakeLists.txt        |  4 +---
 4 files changed, 1 insertion(+), 49 deletions(-)
 delete mode 100644 cmake/CheckAtomic.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c6d836d..88d45ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -41,8 +41,6 @@ add_feature_info(QtQml QCORO_WITH_QML "Build QML integration features")
 set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
-include(cmake/CheckAtomic.cmake)
-
 set(REQUIRED_QT_COMPONENTS Core)
 if (QCORO_WITH_QTDBUS)
     list(APPEND REQUIRED_QT_COMPONENTS DBus)
diff --git a/cmake/AddQCoroLibrary.cmake b/cmake/AddQCoroLibrary.cmake
index 356faa2..ae17624 100644
--- a/cmake/AddQCoroLibrary.cmake
+++ b/cmake/AddQCoroLibrary.cmake
@@ -98,10 +98,6 @@ function(add_qcoro_library)
     target_link_libraries(${target_name} ${qcoro_LIBS})
     target_link_libraries(${target_name} ${qt_LIBS})
 
-    if(NOT HAVE_CXX_ATOMICS_WITHOUT_LIB AND NOT LIB_INTERFACE)
-        target_link_libraries(${target_name} PUBLIC atomic)
-    endif()
-
     set_target_properties(
         ${target_name}
         PROPERTIES
diff --git a/cmake/CheckAtomic.cmake b/cmake/CheckAtomic.cmake
deleted file mode 100644
index e546827..0000000
--- a/cmake/CheckAtomic.cmake
+++ /dev/null
@@ -1,40 +0,0 @@
-# std::atomic may need libatomic to function correctly.
-
-INCLUDE(CheckCXXSourceCompiles)
-INCLUDE(CheckLibraryExists)
-
-# Sometimes linking against libatomic is required for atomic ops, if
-# the platform doesn't support lock-free atomics.
-
-function(check_working_cxx_atomics varname)
-  set(OLD_CMAKE_REQUIRED_FLAGS ${CMAKE_REQUIRED_FLAGS})
-  set(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -std=c++11")
-  CHECK_CXX_SOURCE_COMPILES("
-#include <atomic>
-std::atomic<int> x;
-std::atomic<short> y;
-std::atomic<char> z;
-int main() {
-  ++z;
-  ++y;
-  return ++x;
-}
-" ${varname})
-  set(CMAKE_REQUIRED_FLAGS ${OLD_CMAKE_REQUIRED_FLAGS})
-endfunction(check_working_cxx_atomics)
-
-# Check for (non-64-bit) atomic operations.
-if(MSVC)
-  set(HAVE_CXX_ATOMICS_WITHOUT_LIB True)
-else()
-  # First check if atomics work without the library.
-  check_working_cxx_atomics(HAVE_CXX_ATOMICS_WITHOUT_LIB)
-  # If not, check if the library exists, and atomics work with it.
-  if(NOT HAVE_CXX_ATOMICS_WITHOUT_LIB)
-    list(APPEND CMAKE_REQUIRED_LIBRARIES "atomic")
-    check_working_cxx_atomics(HAVE_CXX_ATOMICS_WITH_LIB)
-    if (NOT HAVE_CXX_ATOMICS_WITH_LIB)
-      message(FATAL_ERROR "Host compiler must support std::atomic!")
-    endif()
-  endif()
-endif()
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index 38b9199..42ab665 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -46,9 +46,7 @@ function(qcoro_add_network_test _name)
         QCoro${QT_VERSION_MAJOR}Network
         Qt${QT_VERSION_MAJOR}::Network
     )
-    if(NOT HAVE_CXX_ATOMICS_WITHOUT_LIB)
-        target_link_libraries(test-${_name} PRIVATE atomic)
-    endif()
+    add_test(NAME test-${_name} COMMAND test-${_name})
 endfunction()
 
 function(qcoro_add_dbus_test _name)
-- 
2.38.1

