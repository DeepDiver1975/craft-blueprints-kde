From acedc3e32c01566c1a66b1c7b72917a654f2d876 Mon Sep 17 00:00:00 2001
From: Nicolas Fella <nicolas.fella@gmx.de>
Date: Tue, 8 Mar 2022 15:38:51 +0100
Subject: [PATCH] Don't build KAuth integration on Windows

KAuth is not supported there
---
 .kde-ci.yml                   |  5 ++++-
 CMakeLists.txt                |  6 +++++-
 config.h.cmake                |  2 ++
 src/CMakeLists.txt            | 25 +++++++++++++++----------
 src/buffer/katetextbuffer.cpp | 13 ++++++++++---
 5 files changed, 36 insertions(+), 15 deletions(-)

diff --git a/.kde-ci.yml b/.kde-ci.yml
index 280bc31b..9b00d183 100644
--- a/.kde-ci.yml
+++ b/.kde-ci.yml
@@ -3,7 +3,6 @@ Dependencies:
   'require':
     'frameworks/extra-cmake-modules': '@same'
     'frameworks/karchive' : '@same'
-    'frameworks/kauth': '@same'
     'frameworks/kconfig' : '@same'
     'frameworks/kguiaddons' : '@same'
     'frameworks/ki18n' : '@same'
@@ -14,5 +13,9 @@ Dependencies:
     'frameworks/kxmlgui' : '@same'
     'frameworks/syntax-highlighting' : '@same'
 
+- 'on': ['Linux', 'FreeBSD', 'macOS']
+  'require':
+    'frameworks/kauth': '@same'
+
 Options:
   test-before-installing: True
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3925936e..0ba9258f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -60,9 +60,13 @@ find_package(KF5KIO ${KF_DEP_VERSION} REQUIRED)
 find_package(KF5Parts ${KF_DEP_VERSION} REQUIRED)
 find_package(KF5Sonnet ${KF_DEP_VERSION} REQUIRED)
 find_package(KF5SyntaxHighlighting ${KF_DEP_VERSION} REQUIRED)
-find_package(KF5Auth ${KF_DEP_VERSION} REQUIRED)
 find_package(KF5TextWidgets ${KF_DEP_VERSION} REQUIRED)
 
+if(NOT WIN32)
+    find_package(KF5Auth ${KF_DEP_VERSION} REQUIRED)
+endif()
+set(HAVE_KAUTH ${KF5Auth_FOUND})
+
 # EditorConfig integration
 find_package(EditorConfig)
 
diff --git a/config.h.cmake b/config.h.cmake
index 89008e45..23533360 100644
--- a/config.h.cmake
+++ b/config.h.cmake
@@ -7,4 +7,6 @@
 
 #cmakedefine01 HAVE_FDATASYNC
 
+#cmakedefine01 HAVE_KAUTH
+
 #endif
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 6724654f..e6f0410b 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -44,7 +44,6 @@ include_directories(
 # KTextEditor interface sources
 set(ktexteditor_LIB_SRCS
 # text buffer & buffer helpers
-buffer/katesecuretextbuffer.cpp
 buffer/katetextbuffer.cpp
 buffer/katetextblock.cpp
 buffer/katetextline.cpp
@@ -214,6 +213,10 @@ if(EditorConfig_FOUND)
     set(ktexteditor_LIB_SRCS ${ktexteditor_LIB_SRCS} document/editorconfig.cpp)
 endif()
 
+if(HAVE_KAUTH)
+    set(ktexteditor_LIB_SRCS ${ktexteditor_LIB_SRCS} buffer/katesecuretextbuffer.cpp)
+endif()
+
 ecm_qt_declare_logging_category(ktexteditor_LIB_SRCS
     HEADER katepartdebug.h
     IDENTIFIER LOG_KTE
@@ -317,10 +320,13 @@ PRIVATE
   KF5::ItemViews
   KF5::SonnetCore
   KF5::SonnetUi
-  KF5::AuthCore
   ${KTEXTEDITOR_OPTIONAL_LIBS}
 )
 
+if(HAVE_KAUTH)
+  target_link_libraries(KF5TextEditor PRIVATE KF5::AuthCore)
+endif()
+
 set_target_properties(KF5TextEditor
    PROPERTIES
    VERSION ${KTEXTEDITOR_VERSION}
@@ -395,14 +401,13 @@ include(ECMGeneratePriFile)
 ecm_generate_pri_file(BASE_NAME KTextEditor LIB_NAME KF5TextEditor DEPS "KParts" FILENAME_VAR PRI_FILENAME INCLUDE_INSTALL_DIR ${KDE_INSTALL_INCLUDEDIR_KF}/KTextEditor)
 install(FILES ${PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
 
-
-add_executable(kauth_ktexteditor_helper buffer/katesecuretextbuffer.cpp)
-target_link_libraries(kauth_ktexteditor_helper
-  KF5::AuthCore
-)
-install(TARGETS kauth_ktexteditor_helper DESTINATION ${KAUTH_HELPER_INSTALL_DIR} )
-kauth_install_helper_files(kauth_ktexteditor_helper org.kde.ktexteditor.katetextbuffer root)
-kauth_install_actions(org.kde.ktexteditor.katetextbuffer buffer/org.kde.ktexteditor.katetextbuffer.actions)
+if(HAVE_KAUTH)
+    add_executable(kauth_ktexteditor_helper buffer/katesecuretextbuffer.cpp)
+    target_link_libraries(kauth_ktexteditor_helper KF5::AuthCore)
+    install(TARGETS kauth_ktexteditor_helper DESTINATION ${KAUTH_HELPER_INSTALL_DIR} )
+    kauth_install_helper_files(kauth_ktexteditor_helper org.kde.ktexteditor.katetextbuffer root)
+    kauth_install_actions(org.kde.ktexteditor.katetextbuffer buffer/org.kde.ktexteditor.katetextbuffer.actions)
+endif()
 
 # add part
 add_subdirectory(part)
diff --git a/src/buffer/katetextbuffer.cpp b/src/buffer/katetextbuffer.cpp
index f8e035d7..9db70a73 100644
--- a/src/buffer/katetextbuffer.cpp
+++ b/src/buffer/katetextbuffer.cpp
@@ -6,7 +6,6 @@
 #include "config.h"
 #include "kateglobal.h"
 
-#include "katesecuretextbuffer_p.h"
 #include "katetextbuffer.h"
 #include "katetextloader.h"
 
@@ -16,8 +15,6 @@
 #include "katepartdebug.h"
 #include "kateview.h"
 
-#include <KAuth/Action>
-#include <KAuth/ExecuteJob>
 
 #ifndef Q_OS_WIN
 #include <cerrno>
@@ -34,6 +31,12 @@
 #include <QFileInfo>
 #include <QTemporaryFile>
 
+#if HAVE_KAUTH
+#include "katesecuretextbuffer_p.h"
+#include <KAuth/Action>
+#include <KAuth/ExecuteJob>
+#endif
+
 #if 0
 #define BUFFER_DEBUG qCDebug(LOG_KTE)
 #else
@@ -848,6 +851,7 @@ TextBuffer::SaveResult TextBuffer::saveBufferUnprivileged(const QString &filenam
 
 bool TextBuffer::saveBufferEscalated(const QString &filename)
 {
+#if HAVE_KAUTH
     // construct correct filter device
     // we try to use the same compression as for opening
     const KCompressionDevice::CompressionType type = KCompressionDevice::compressionTypeForMimeType(m_mimeTypeForFilterDev);
@@ -933,6 +937,9 @@ bool TextBuffer::saveBufferEscalated(const QString &filename)
     }
 
     return true;
+#else
+    return false;
+#endif
 }
 
 void TextBuffer::notifyAboutRangeChange(KTextEditor::View *view, KTextEditor::LineRange lineRange, bool needsRepaint)
-- 
2.35.1

